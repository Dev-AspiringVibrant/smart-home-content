body {
    font-family: "Roboto", "system-ui";
    background-color: grey;
    margin: 0 auto;
}
/* img { */
    /* max-width: 100%; */
    /* object-fit: cover; */
/* } */

header {
    background-color: crimson;
    padding: 4em;
    display: flex;
    justify-content: space-around;
    align-items: center;
}

section.row {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
}

section.col.one-third {
    width: calc(100%/3);
}

.navigation-title > nav > a {
    text-decoration: none;
    color: green;
    background-color: white;
    display: inline-block;
    padding: 1em;
    border-radius: 0.3em;
    /* transition animation */
    transition-duration: 250ms;
    transition-delay: 0ms;
    transition-timing-function: ease;
    align-self: stretch;
}
.navigation-title > nav > a:hover {
    background-color: black;
    color: whitesmoke;
}
#hero {
    background-image: url(/pictures/minecrafthouse1.webp);
    background-repeat: no-repeat;
    background-size: cover;
    height: 50em;
    /* width: 100em; */
    display: flex;
    align-content: center;
    justify-content: center;
}
.content-items {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

}
.content-items > .texts {
    padding: 1em;
    border-radius: 0.5em;
    background-color: white;
    width: 25%;
    height: 33%;
    display: block;
    align-self: center;
}
.content-items > .texts > aside {
    padding: 1em;
    border-radius: 1em;
}
.footer {
    background-color: orange;
    display: flex;
    justify-content: space-around;
    align-items: center;
}
.alt-nav {
    display: flex;
    height: fit-content;
    align-content: space-evenly;
    justify-content: space-around; 
    flex-direction: row;
}
.footer-1 {
    background-color: white;
    max-width: fit-content;
    width: 10em;
}

.center {
    text-align: center;
}
.container {
    background-color: white;
    padding: 1em;
    border-radius: 0.7em;
}
.container2 {
    background-color: lightgrey;
    padding: 1em;
    border-radius: 0.7em;
    display: flex;
    justify-content: space-around;
}
.spacearound {
    display: flex;
    justify-content: space-around;
}
.column {
    display: flex;
    flex-direction: column;
}
.rotate2d {
    transition: 800ms;
}
.rotate2d:hover {
    transform: rotate(360deg);
}
.clippy {
    transition: 10s
}
.clippy:hover {
    transform: translateX(-40em);
    transition: 1s;
}
/* Miscellaneous Stuffs Lol */
.fakereview {
    box-sizing: border-box;
  }
  
  .heading {
    font-size: 25px;
    margin-right: 25px;
  }
  
  .fa {
    font-size: 25px;
  }
  
  .checked {
    color: orange;
  }
  
  /* Three column layout */
  .side {
    float: left;
    width: 15%;
    margin-top: 10px;
  }
  
  .middle {
    float: left;
    width: 70%;
    margin-top: 10px;
    display: flex;
    justify-content: center;
  }
  
  /* Place text to the right */
  .right {
    text-align: right;
  }
  
  /* Clear floats after the columns */
  .row:after {
    content: "";
    display: table;
    clear: both;
  }
  
  /* The bar container */
  .bar-container {
    width: 80%;
    background-color: #f1f1f1;
    text-align: center;
    color: white;
  }
  
  /* Individual bars */
  .bar-5 {width: 0.1%; height: 18px; background-color: #04AA6D;}
  .bar-4 {width: 0%; height: 18px; background-color: #2196F3;}
  .bar-3 {width: 0%; height: 18px; background-color: #00bcd4;}
  .bar-2 {width: 0%; height: 18px; background-color: #ff9800;}
  .bar-1 {width: 99.9%; height: 18px; background-color: #f44336;}
  
  /* Responsive layout - make the columns stack on top of each other instead of next to each other */
  @media (max-width: 400px) {
    .side, .middle {
      width: 100%;
    }
    /* Hide the right column on small screens */
    .right {
      display: none;
    }
  }
.alertinfo {
    padding: 20px;
  background-color: #0861f1;
  color: white;
  margin-bottom: 15px;
}
.closebtn {
    margin-left: 15px;
    color: white;
    font-weight: bold;
    float: right;
    font-size: 22px;
    line-height: 20px;
    cursor: pointer;
    transition: 0.3s;
  }
  .transform1 {
    transform: translate(23em, -0.2em);
  }
  .transform2 {
    transform: translate(-21em, -0.2em);
  }
  .navt1 {
transform: translateX(-11.5em);
  }
  .navt2 {
transform: translateX(11.5em);
  }